import React, {useContext, useEffect, useState} from 'react'
import {modalContext} from 'contexts/modalContext'
import useFetch from 'hooks/useFetch'
import Loading from 'components/loading'
import Error from 'components/errorMessage'
import axios from 'axios'
import {serverUrl} from 'utils'
import AutoPartItem from './autoPartItem'
import RequestSuccessModal from './requestSuccessModal/requestSuccessModal'

const StoreRequest = () => {
    let {modalContent, handleModal, modal} = useContext(modalContext)
    const [makeAutoSelect, setMakeAutoSelect] = useState(false)
    const [modelAutoSelect, setModelAutoSelect] = useState(false)
    const [fetchedModels, setFetchedModels] = useState([])
    const autoFetchApi = '/auto/makes'
    const [{response, isLoading, error}, doFetch] = useFetch(autoFetchApi)
    const [selectedMake, setSelectedMake] = useState('')
    const [selectedModel, setSelectedModel] = useState('')
    const [file, setFile] = useState(null)

    const [autoParts, setAutoParts] = useState([{
        autoPartTitle: '',
        autoPartType: ''
    }])

    const [username, setUsername] = useState('')
    const [phoneNumber, setPhoneNumber] = useState('')
    const [email, setEmail] = useState('')
    const [vin, setVin] = useState('')

    useEffect(() => {
        doFetch()
    }, [doFetch])

    const sendRequest = event => {
        if ((vin == null || vin === '') && (file == null || file === {})) {
            alert('Заполните поле с VIN номером либо загрузите фотографию')
        }

        event.preventDefault()
        const sendApiUrl = `${serverUrl}/request/create`
        const body = {
            autoparts: autoParts,
            autoMake: selectedMake,
            autoModel: selectedModel,
            name: username,
            phoneNumber: phoneNumber,
            email: email,
            vin: vin
        }

        console.log(body)

        let responseFromServer = null
        axios.post(sendApiUrl, body)
            .then(res => {
                responseFromServer = res
                handleModal(<RequestSuccessModal />, true)
                if (file == null || file === {}) {
                    return
                }
                sendVinImage(responseFromServer.data.id)
            })
            .catch(error => {
                console.log(error.message)
            })
    }

    const sendVinImage = requestId => {
        let formData = new FormData()
        formData.append('file', file)
        formData.append('requestId', requestId)

        const urlImageSend = `${serverUrl}/request/uploadRequestImage`
        axios.post(urlImageSend, formData)
            .then(res => {
                console.log(res.data)
            })
            .catch(error => {
                console.log(error.message)
            })
    }

    useEffect(() => {
        if (selectedMake === '') {
            return
        }
        const modelsUrl = `${serverUrl}/auto/makeModels/?makeTitle=${selectedMake}`

        axios.get(modelsUrl)
            .then(res => {
                setFetchedModels(res.data)
            })
            .catch(error => {
                console.log('error', error)
            })
        document.getElementById('selectMakeP').innerText = selectedMake
        setSelectedModel('Выберите модель')

    }, [selectedMake])

    useEffect(() => {
        if (selectedModel === '') {
            return
        }

        document.getElementById('selectModelP').innerText = selectedModel
    }, [selectedModel])

    useEffect(() => {
        if (fetchedModels.length === 0) {
            return
        }
        console.log(fetchedModels)
    }, [fetchedModels])

    const closeModal = event => {
        event.preventDefault()
        handleModal()
    }

    const handleMakeAutoSelect = event => {
        if (makeAutoSelect === false) {
            setMakeAutoSelect(true)
        }
    }

    const handleMakeAutoClick = event => {
        const el = document.getElementById('makeAutoSelect')
        el.classList.remove('active')
        setMakeAutoSelect(false)
        setSelectedMake(event.target.textContent)
    }

    const handleModelAutoSelect = event => {
        if (modelAutoSelect === false) {
            setModelAutoSelect(true)
        }
    }

    const handleModelAutoClick = event => {
        const el = document.getElementById('modelAutoSelect')
        el.classList.remove('active')
        setModelAutoSelect(false)
        setSelectedModel(event.target.textContent)
    }

    const addAutoPart = event => {
        event.preventDefault()
        console.log('add')
        setAutoParts([...autoParts, {
            autoPartTitle: '',
            autoPartType: ''
        }])
    }


    const handleUploadLinkClick = event => {
        event.preventDefault()
        const inputElement = document.getElementById('uploadLinkInput')

        inputElement.click()
    }

    const handleUploadLinkInput = event => {
        const files = event.target.files
        if (files && files[0]) {
            const img = files[0]
            setFile(img)
        }
    }


    return (
        <div className="modal modal_avtozap modal_avtozap_css" style={{display: 'flex'}}>
            <div className="modal_bg"/>
            <div className="modal_box">
                <img onClick={closeModal} className="close mod_close" src="/img/close.svg" alt='close'/>
                <h2>Заявка на просчет автозапчастей</h2>
                <a className="avtozap_s1">Указать свой авто <span>+</span></a>
                <div className="modal_avtozap_up">
                    <div
                        className={
                            makeAutoSelect === true ?
                                'modal_avtozap_mark modal_avtozap_drop active'
                                : 'modal_avtozap_mark modal_avtozap_drop'
                        }
                        id='makeAutoSelect'
                    >
                        <p
                            id='selectMakeP'
                            onClick={handleMakeAutoSelect}
                        >
                            Выберите марку
                        </p>
                        <div className="modal_avtozap_drop_box">
                            <div className="modal_avtozap_mycar">
                                <h3>Все марки</h3>
                                <ul>
                                    {isLoading && <Loading/>}
                                    {error && <Error/>}
                                    {!isLoading && response && (
                                        <>
                                            {response.map((auto, index) => (
                                                <li key={index} onClick={handleMakeAutoClick}>{auto.make}</li>
                                            ))}
                                        </>
                                    )
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div
                        className={modelAutoSelect === true ?
                            'modal_avtozap_mark modal_avtozap_drop active' : 'modal_avtozap_mark modal_avtozap_drop'}
                        id='modelAutoSelect'
                    >
                        <p
                            onClick={handleModelAutoSelect}
                            id='selectModelP'
                        >
                            Выберите модель
                        </p>
                        <div className="modal_avtozap_drop_box">
                            <div className="modal_avtozap_mycar">
                                <ul>
                                    {fetchedModels.length !== 0 && (
                                        <>
                                            {fetchedModels.map((model, index) => (
                                                <li onClick={handleModelAutoClick} key={index}>{model.model}</li>
                                            ))
                                            }
                                        </>
                                    )}
                                </ul>
                            </div>
                        </div>
                    </div>

                    <div className="modal_avtozap_vin">
                        <input
                            type="text"
                            className="avtozap_vin"
                            placeholder="Введите VIN номер автомобиля или загрузите фото VIN"
                            onChange={event => setVin(event.target.value)}
                            minLength={17}
                            maxLength={17}
                        />
                        <input
                            type="file"
                            id="uploadLinkInput"
                            style={{display: 'none'}}
                            onChange={handleUploadLinkInput}

                        />
                        <a
                            className="hover2"
                            id="uploadLink"
                            onClick={handleUploadLinkClick}
                        >
                            {file != null ? file.name : 'Загрузить фото'}
                        </a>

                    </div>
                </div>
                <div className="modal_avtozap_main">
                    <h3>Укажите необходимые запчасти</h3>
                    <div className="modal_avtozap_main_box">
                        <div className="modal_avtozap_row">
                            {
                                autoParts.map((autoPart, index) => (
                                    <AutoPartItem
                                        number={index}
                                        key={index}
                                        autoParts={autoParts}
                                        setAutoParts={setAutoParts}
                                    />
                                ))
                            }
                        </div>
                        <a
                            className="hover2"
                            onClick={addAutoPart}
                        >
                            Еще
                        </a>
                    </div>
                </div>
                <div className="modal_avtozap_down">
                    <form className="zap_form" onSubmit={sendRequest}>
                        <div className="zap_form_row">
                            <div className="zap_form_l">
                                <input
                                    type="text"
                                    className="zap_form_name"
                                    placeholder="Имя"
                                    onChange={event => setUsername(event.target.value)}
                                    required={true}
                                />
                                <input
                                    type="tel"
                                    className="zap_form_tel"
                                    placeholder="79279684860"
                                    onChange={event => setPhoneNumber(event.target.value)}
                                    required={true}
                                    minLength={11}
                                    maxLength={11}
                                />
                                <input
                                    type="email"
                                    className="zap_form_email"
                                    placeholder="info@yandex.ru"
                                    onChange={event => setEmail(event.target.value)}
                                    required={true}
                                />
                            </div>
                            <input
                                type="submit"
                                className="zap_form_r hover1"
                                value="Отправить"
                            />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    )
}

export default StoreRequest
