import React, {useState, useEffect, Fragment} from 'react'
import useFetch from 'hooks/useFetch'
import Loading from "components/loading";
import ErrorMessage from "components/errorMessage";

const FindServices = params => {

    const [apiUrl, setApiUrl] = useState('/services/all')
    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)
    const [checkedItems, setCheckedItems] = useState([])

    useEffect(() => {
        params.setArrayFilterServices(checkedItems)
    }, [checkedItems])

    const handleChange = event => {
        const inputValue = event.target
        const innerText = inputValue.parentElement.innerText
        if (event.target.checked === true) {
            setCheckedItems([...checkedItems, innerText])
        } else {
            const index = checkedItems.indexOf(innerText)
            checkedItems.splice(index, 1)
            setCheckedItems(checkedItems)
        }
    }

    useEffect(() => {
        doFetch()
    }, [doFetch])

    return (
        <>
                {isLoading && <Loading/>}
                {error && <ErrorMessage/>}
                {!isLoading && response && (
                    <ul>
                        {
                            response.map((service, index) => (
                                <div key={index}>
                                    <li>
                                        <label>
                                            <input onChange={handleChange} type='checkbox' />
                                            <div>{service.title}</div>
                                        </label>
                                    </li>
                                </div>
                            ))
                        }
                    </ul>)}

        </>
    )
}

export default FindServices
