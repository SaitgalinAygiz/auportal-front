import React, {useContext, useEffect, useState} from "react";
import {Redirect} from "react-router-dom";
import useFetch from "hooks/useFetch";
import useLocalStorage from "hooks/useLocalStorage";
import {CurrentUserContext} from 'contexts/currentUser'
import BackendErrorMessages from 'components/backendErrorMessages'
import {modalContext} from 'contexts/modalContext'
import SignUp from "pages/signUp";

const SignIn = props => {
    const apiUrl = '/auth/signIn'
    let { modalContent, handleModal, modal } = useContext(modalContext);


    const [email, setEmail] = useState('')
    const [password, setPassword] = useState('')
    const [isSuccessfulSubmit, setIsSuccessfulSubmit] = useState(false)
    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)
    const [, setToken] = useLocalStorage('token')

    const [currentUserState, setCurrentUserState] = useContext(CurrentUserContext)
    console.log('signIn component was mounted')

    const handleSubmit = event => {
        event.preventDefault()
        const user = {email, password}
        doFetch({
            method: 'post',
            data: {
                ...user
            }
        })
    }

    const handleSignUpButton = event => {
        event.preventDefault()
        handleModal(<SignUp/>, true)
    }

    useEffect(() => {
        console.log(error)
    }, [error])

    useEffect(() => {
        if (!response) {
            return
        }

        console.log('response: ' + response.accessToken)
        setToken(response.accessToken)
        setIsSuccessfulSubmit(true)
        setCurrentUserState(state => ({
            ...state,
            isLoggedIn: true,
            isLoading: false,
            currentUser: response
        }))
        handleModal()

    }, [response, setToken, setCurrentUserState])


    if (isSuccessfulSubmit) {
        return <Redirect to='/'/>
    }

    return (
        <>
            <div className="modal_box">
                <img onClick={() => handleModal()} className="close mod_close" src={process.env.PUBLIC_URL + '/img/close.svg'} alt='close'/>
                <h2>Вход</h2>
                <form onSubmit={handleSubmit} id='signInForm'>
                    {error && <BackendErrorMessages backendErrors={error}/>}
                    <input
                        type="email"
                        className="in_tel"
                        placeholder="Email"
                        value={email}
                        onChange={e => setEmail(e.target.value)}
                    />

                    <div className="password">
                        <input
                            type="password"
                            id="password-input"
                            placeholder="Пароль"
                            value={password}
                            onChange={e => setPassword(e.target.value)}
                        />
                    </div>
                    <div className="modal_in_brain">
                        <label>
                            <input type="checkbox"/>
                            <div>Запомнить пароль</div>
                        </label>
                        <a>Забыли пароль?</a>
                    </div>
                    <input
                        type="submit"
                        className='submit'
                        disabled={isLoading}
                        value='Войти'
                    />

                    <a className="modal_in_reg" onClick={handleSignUpButton} href="#">
                        Регистрация
                    </a>
                </form>
                <p className="modal_in_t1">При входе вы потверждаете согласие <a>с условиями <br/> использования
                    BESTforCARS</a> и политикой о данных пользователей.</p>
            </div>
        </>
    )
}

export default SignIn
