import React, {useContext, useEffect, useState} from "react";
import useFetch from "hooks/useFetch";
import {CurrentUserContext} from 'contexts/currentUser'
import BackendErrorMessages from 'components/backendErrorMessages'
import {modalContext} from 'contexts/modalContext'
import SmsCodeConfirm from './smsCodeConfirm'
import useLocalStorage from 'hooks/useLocalStorage'
import axios from 'axios'
import {serverUrl} from 'utils'

const SignUp = props => {
    const apiUrl = '/auth/signUp'
    let { modalContent, handleModal, modal } = useContext(modalContext);

    const [email, setEmail] = useState('')
    const [password, setPassword] = useState('')
    const [passwordConfirm, setPasswordConfirm] = useState('')
    const [fio, setFio] = useState('')
    const [phone, setPhone] = useState('')
    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)
    const [user, setUser] = useState(null)


    const [, setToken] = useLocalStorage('token')

    const [currentUserState, setCurrentUserState] = useContext(CurrentUserContext)
    console.log('signUp component was mounted')

    const handleSubmit = event => {
        event.preventDefault()
        const user = {email, password, fio, phone}
        setUser(user)

        doFetch({
            method: 'post',
            data: {
                ...user
            }
        })
    }

    useEffect(() => {
        if (!response) {
            return
        }

        const signInBody = {
            email: user.email,
            password: user.password
        }

        let signInResponse = null
        axios.post(`${serverUrl}/auth/signIn`, signInBody)
            .then(res => {
                console.log(res)
                signInResponse = res.data

                setToken(signInResponse.accessToken)
                setCurrentUserState(state => ({
                    ...state,
                    isLoggedIn: true,
                    isLoading: false,
                    currentUser: signInResponse
                }))

                handleModal(<SmsCodeConfirm/>, true)
            })
            .catch(err => {
                console.log(err)
                throw new Error('Что-то')
            })

    }, [response, setCurrentUserState])




    return (
        <>
            <div className="modal modal_reg modal_in_css">
                <div className="modal_bg"/>
                <div className="modal_box">
                    <img onClick={() => handleModal()} className="close mod_close" src="/img/close.svg" alt='close' />
                        <h2>Регистрация</h2>
                        <form onSubmit={handleSubmit} id='signUpForm'>
                            {
                                error
                                &&
                                <BackendErrorMessages backendErrors={error} />
                            }
                            <p>Ваше ФИО</p>
                            <input
                                type="text"
                                className="in_tel"
                                placeholder="Фамилия Имя Отчество"
                                value={fio}
                                onChange={e => setFio(e.target.value)}
                                required={true}
                            />
                                <p>Номер телефона</p>
                                <input
                                    type="tel"
                                    className="in_tel"
                                    placeholder="79279684860"
                                    value={phone}
                                    onChange={e => setPhone(e.target.value)}
                                    maxLength={11}
                                    minLength={11}
                                    required={true}
                                />
                                    <p>Email</p>
                                    <input
                                        type="email"
                                        className="in_tel"
                                        placeholder="ivanov@mail.ru"
                                        value={email}
                                        onChange={e => setEmail(e.target.value)}
                                        required={true}
                                    />
                                        <p>Пароль</p>
                                        <div className="password">
                                            <input
                                                type="password"
                                                id="password-input"
                                                placeholder="Введите ваш пароль"
                                                value={password}
                                                onChange={e => setPassword(e.target.value)}
                                            />
                                        </div>
                                        <input
                                            type="submit"
                                            className="submit"
                                            value="Зарегистрироваться"
                                            disabled={isLoading}
                                        />
                        </form>
                        <p className="modal_in_t1">При входе вы потверждаете согласие <a>с условиями использования
                            BESTforCARS</a> и <a>политикой о данных пользователей</a>.</p>
                </div>
            </div>
        </>
    )
}

export default SignUp
