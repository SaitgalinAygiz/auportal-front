import {parse} from 'query-string'

export const range = (start, end) =>{
    return [...Array(end).keys()].map(el => el + start)
}

export const paginationLimit = 18

export const ggtpL = 'https://localhost/333'

export const getPaginator = search => {
    const parsedSearch = parse(search)
    const currentPage = parsedSearch.page ? Number(parsedSearch.page) : 1
    const offset = currentPage * 10 - paginationLimit
    return {currentPage, offset}
}

export const serverUrl = 'http://localhost:3999'

export const transformWorkSchedule = workSchedule => {
    switch(workSchedule) {
        case 'monday':
            return 'Пн'
        case 'tuesday':
            return 'Вт'
        case 'wednesday':
            return 'Ср'
        case 'thursday':
            return 'Чт'
        case 'friday':
            return 'Пт'
        case 'saturday':
            return 'Сб'
        case 'sunday':
            return 'Вск'
    }
}

export const transformSubAccountType = subAccountType => {
    switch(subAccountType) {
        case 'active':
            return 'Активен'
        case 'paymentWait':
            return 'Ожидает оплаты'
        case 'stopped':
            return 'Остановлен'
        case 'moderation':
            return 'На модерации'
    }
}

export const transformCategory = category => {
    switch(category) {
        case 'saleAutoParts':
            return 'Магазин автозапчастей'
        case 'service':
            return 'Автосервис'
        case 'equipmentInstallation':
            return 'Установка оборудования'
        case 'carTuning':
            return 'Автотюнинг'
        case 'autoSelection':
            return 'Услуги по авторазбору'
        case 'autoTechnicalAssistance':
            return 'Автотехпомощь'
        case 'insurance':
            return 'Страхование транспортных средств'
        case 'legalSupport':
            return 'Юридическая помощь'
    }
}

export const transformAutoPart = autoPartType => {
    switch(autoPartType) {
        case 'Все, кроме Китая':
            return 'notChina'
        case 'Все производители':
            return 'all'
        case 'Оригиналы и аналоги':
            return 'analogues'
        case 'Только оригиналы':
            return 'original'
        default:
            throw new Error('Нет такого типа запчастей')
    }
}

export const switchUrlToCategoryType = url => {
    switch(url) {
        case '/':
            return 'saleAutoParts'
        case '/service':
            return 'service'
    }
}
